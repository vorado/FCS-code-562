/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package crc;

import java.io.IOException;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Parth
 */
public class mainForm extends javax.swing.JFrame {

    /**
     * Creates new form mainForm
     */
    public mainForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jSeparator1 = new javax.swing.JSeparator();
        receiverTabbedPanel = new javax.swing.JTabbedPane();
        senderPanel = new javax.swing.JPanel();
        dataBitsTextField = new javax.swing.JTextField();
        generatorBitsTextField = new javax.swing.JTextField();
        getCRCButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        crcOutputTextField = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        crcPolynomialTag = new javax.swing.JLabel();
        dataPolyTag = new javax.swing.JLabel();
        sendGeneratorPolyTag = new javax.swing.JLabel();
        receiverPanel = new javax.swing.JPanel();
        receivedData = new javax.swing.JLabel();
        receivedDataTextField = new javax.swing.JTextField();
        errorPatternTextField = new javax.swing.JTextField();
        receiverGeneratorTextField = new javax.swing.JTextField();
        receiverResultText = new javax.swing.JLabel();
        reveiverCheck = new javax.swing.JButton();
        dataWithError = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        syndromeTag = new javax.swing.JLabel();
        syndromePolyTag = new javax.swing.JLabel();
        recvDataPolyTag = new javax.swing.JLabel();
        recvTxPolyTag = new javax.swing.JLabel();
        errorPatternPolyTag = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        alteredDataPolyTag = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        recvGenPolyTag = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        dataBitsTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataBitsTextFieldActionPerformed(evt);
            }
        });

        generatorBitsTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generatorBitsTextFieldActionPerformed(evt);
            }
        });

        getCRCButton.setText("Get CRC");
        getCRCButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getCRCButtonActionPerformed(evt);
            }
        });

        crcOutputTextField.setEditable(false);
        jScrollPane2.setViewportView(crcOutputTextField);

        jLabel1.setText("Data Bits:");

        jLabel2.setText("Generator Bits:");

        jLabel3.setText("CRC Bits:");

        crcPolynomialTag.setText("CRC Polynomial");

        dataPolyTag.setText("          ");

        sendGeneratorPolyTag.setText("              ");

        javax.swing.GroupLayout senderPanelLayout = new javax.swing.GroupLayout(senderPanel);
        senderPanel.setLayout(senderPanelLayout);
        senderPanelLayout.setHorizontalGroup(
            senderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(senderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(senderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, senderPanelLayout.createSequentialGroup()
                        .addGap(0, 252, Short.MAX_VALUE)
                        .addComponent(crcPolynomialTag, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(senderPanelLayout.createSequentialGroup()
                        .addComponent(getCRCButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(116, 116, 116))
                    .addGroup(senderPanelLayout.createSequentialGroup()
                        .addGroup(senderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(senderPanelLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(senderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(generatorBitsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sendGeneratorPolyTag, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)))
                            .addGroup(senderPanelLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(34, 34, 34)
                                .addGroup(senderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(dataPolyTag, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                                    .addComponent(dataBitsTextField))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        senderPanelLayout.setVerticalGroup(
            senderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(senderPanelLayout.createSequentialGroup()
                .addGroup(senderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataBitsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dataPolyTag)
                .addGap(3, 3, 3)
                .addGroup(senderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(generatorBitsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(sendGeneratorPolyTag)
                .addGap(18, 18, 18)
                .addGroup(senderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(senderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(getCRCButton)
                        .addComponent(jLabel3))
                    .addGroup(senderPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(crcPolynomialTag)))
                .addGap(0, 304, Short.MAX_VALUE))
        );

        receiverTabbedPanel.addTab("Sender", senderPanel);

        receivedData.setText("                     ");

        receivedDataTextField.setText("Received Data");
        receivedDataTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receivedDataTextFieldActionPerformed(evt);
            }
        });

        errorPatternTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                errorPatternTextFieldActionPerformed(evt);
            }
        });

        receiverGeneratorTextField.setText("Generator");

        receiverResultText.setText("RESULT");

        reveiverCheck.setText("Check");
        reveiverCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reveiverCheckActionPerformed(evt);
            }
        });

        dataWithError.setText("                             ");

        jLabel4.setText("Received Data");

        jLabel5.setText("Error Pattern");

        jLabel6.setText("Generator Bits");

        syndromeTag.setText("          ");

        syndromePolyTag.setText("                          ");

        recvDataPolyTag.setText("                    ");

        recvTxPolyTag.setText("                     ");

        errorPatternPolyTag.setText("                     ");

        jLabel8.setText("Altered Data");

        alteredDataPolyTag.setText("         ");

        jLabel9.setText("Actual Sent Data");

        jLabel10.setText("Syndrome");

        recvGenPolyTag.setText("                                                        ");

        javax.swing.GroupLayout receiverPanelLayout = new javax.swing.GroupLayout(receiverPanel);
        receiverPanel.setLayout(receiverPanelLayout);
        receiverPanelLayout.setHorizontalGroup(
            receiverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(receiverPanelLayout.createSequentialGroup()
                .addGroup(receiverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(receiverPanelLayout.createSequentialGroup()
                        .addGroup(receiverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(receiverPanelLayout.createSequentialGroup()
                                .addGroup(receiverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(receiverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(recvTxPolyTag, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(receivedDataTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                                    .addComponent(errorPatternTextField)))
                            .addComponent(jLabel8))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, receiverPanelLayout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(errorPatternPolyTag, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(receiverPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(receivedData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(recvDataPolyTag, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(receiverPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(receiverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(receiverPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(receiverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(recvGenPolyTag)
                            .addComponent(receiverGeneratorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(receiverPanelLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(syndromeTag, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE))
                            .addComponent(alteredDataPolyTag, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dataWithError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(reveiverCheck)
                    .addComponent(jLabel9)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, receiverPanelLayout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(syndromePolyTag, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(receiverResultText, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(108, 108, 108))
        );
        receiverPanelLayout.setVerticalGroup(
            receiverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(receiverPanelLayout.createSequentialGroup()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(receivedData)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(recvDataPolyTag)
                .addGap(21, 21, 21)
                .addGroup(receiverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(receivedDataTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(recvTxPolyTag)
                .addGap(13, 13, 13)
                .addGroup(receiverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(errorPatternTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errorPatternPolyTag)
                .addGap(54, 54, 54)
                .addGroup(receiverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataWithError)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(alteredDataPolyTag)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(receiverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(receiverGeneratorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(recvGenPolyTag)
                .addGap(1, 1, 1)
                .addGroup(receiverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, receiverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(syndromeTag)
                        .addComponent(receiverResultText, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(receiverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(reveiverCheck)
                        .addComponent(jLabel10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(syndromePolyTag)
                .addGap(179, 179, 179))
        );

        receiverTabbedPanel.addTab("Receiver", receiverPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(receiverTabbedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(receiverTabbedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void getCRCButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getCRCButtonActionPerformed

        int[] kBits,generator;
        try {
            kBits = CRC.stringToBin(dataBitsTextField.getText());
            generator = CRC.stringToBin(generatorBitsTextField.getText());
            String nBits = CRC.binToString(CRC.generateCRC(kBits, generator));
            
            crcOutputTextField.setText(nBits);
            receiverGeneratorTextField.setText(generatorBitsTextField.getText());
            
            receivedData.setText(CRC.binToString(kBits)+"   " + nBits);
            receivedDataTextField.setText(CRC.binToString(kBits) + nBits);
            int[] zeroString = new int[kBits.length + nBits.length()];
            errorPatternTextField.setText(CRC.binToString(zeroString));
            
            System.out.println("Nbits: " + nBits);
            
            dataPolyTag.setText(CRC.getPolynomialString(dataBitsTextField.getText()));
            sendGeneratorPolyTag.setText(CRC.getPolynomialString(generatorBitsTextField.getText()));
            crcPolynomialTag.setText(CRC.getPolynomialString(nBits));
            recvDataPolyTag.setText(CRC.getPolynomialString(CRC.binToString(kBits)+nBits));
            receiverTabbedPanel.setSelectedIndex(1);
            
        } catch (Exception ex) {
            Logger.getLogger(mainForm.class.getName()).log(Level.SEVERE, null, ex);
            
            JOptionPane.showMessageDialog(this, "Oops!!!! VALUE ERROR IN BITS!!!! USE ONLY 1 and 0","Value Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_getCRCButtonActionPerformed

    private void generatorBitsTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generatorBitsTextFieldActionPerformed
        generatorBitsTextField.selectAll();
    }//GEN-LAST:event_generatorBitsTextFieldActionPerformed

    private void dataBitsTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataBitsTextFieldActionPerformed
        dataBitsTextField.selectAll();
    }//GEN-LAST:event_dataBitsTextFieldActionPerformed

    private void reveiverCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reveiverCheckActionPerformed
        try {
            System.out.println(receivedDataTextField.getText());
            String bitsString = receivedDataTextField.getText();
            int[] stream = CRC.stringToBin(bitsString);
            System.out.println(Arrays.toString(stream));
            int[] generator = CRC.stringToBin(receiverGeneratorTextField.getText());
            int[] errorPattern = CRC.stringToBin(errorPatternTextField.getText());
            if(errorPattern.length != receivedDataTextField.getText().length() && errorPattern.length != 0){
                JOptionPane.showMessageDialog(this, "Sorry! You need have proper errorPattern length","Oops...",JOptionPane.ERROR_MESSAGE);
                return;
            }
            int[] alteredPattern = CRC.alter(stream, errorPattern);
            dataWithError.setText(CRC.binToString(alteredPattern));
            
            if(CRC.checkCRC(alteredPattern, generator))
                receiverResultText.setText("No Errors Detected!");
            else
                receiverResultText.setText("Error Detected!");
            
            syndromeTag.setText(CRC.binToString(CRC.getSyndrome(stream, generator)));
            recvTxPolyTag.setText(CRC.getPolynomialString(receivedDataTextField.getText()));
            errorPatternPolyTag.setText(CRC.getPolynomialString(errorPatternTextField.getText()));
            alteredDataPolyTag.setText(CRC.getPolynomialString(dataWithError.getText()));
            recvGenPolyTag.setText(CRC.getPolynomialString(receiverGeneratorTextField.getText()));
            syndromePolyTag.setText(CRC.getPolynomialString(syndromeTag.getText()));
        } catch (Exception ex) {
            //recvDebugTextArea.setText("");
            Logger.getLogger(mainForm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Oops!!!! VALUE ERROR IN BITS!!! USE ONLY 1 and 0","Value Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_reveiverCheckActionPerformed

    private void errorPatternTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_errorPatternTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_errorPatternTextFieldActionPerformed

    private void receivedDataTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receivedDataTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_receivedDataTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel alteredDataPolyTag;
    private javax.swing.JTextPane crcOutputTextField;
    private javax.swing.JLabel crcPolynomialTag;
    private javax.swing.JTextField dataBitsTextField;
    private javax.swing.JLabel dataPolyTag;
    private javax.swing.JLabel dataWithError;
    private javax.swing.JLabel errorPatternPolyTag;
    private javax.swing.JTextField errorPatternTextField;
    private javax.swing.JTextField generatorBitsTextField;
    private javax.swing.JButton getCRCButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel receivedData;
    private javax.swing.JTextField receivedDataTextField;
    private javax.swing.JTextField receiverGeneratorTextField;
    private javax.swing.JPanel receiverPanel;
    private javax.swing.JLabel receiverResultText;
    private javax.swing.JTabbedPane receiverTabbedPanel;
    private javax.swing.JLabel recvDataPolyTag;
    private javax.swing.JLabel recvGenPolyTag;
    private javax.swing.JLabel recvTxPolyTag;
    private javax.swing.JButton reveiverCheck;
    private javax.swing.JLabel sendGeneratorPolyTag;
    private javax.swing.JPanel senderPanel;
    private javax.swing.JLabel syndromePolyTag;
    private javax.swing.JLabel syndromeTag;
    // End of variables declaration//GEN-END:variables
}
